<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
        namespace="com.zimuka.peers.mapper.UserPeerMapper">
    <resultMap id="UserPeerMapperResultMap"
               type="com.zimuka.peers.dao.UserPeer">
        <id column="open_id" property="openId"/>
        <result column="card_id" property="cardId"/>
        <result column="group_id" property="groupId"/>
        <result column="share_flag" property="shareFlag"/>
        <result column="save_flag" property="saveFlag"/>
        <result column="del_flag" property="delFlag"/>
        <result column="ct_time" property="ctTime"/>
        <result column="up_time" property="upTime"/>
        <result column="prepare" property="prepare"/>
    </resultMap>

    <sql id="Base_Column_List">
        open_id, card_id, group_id, share_flag, save_flag, del_flag, ct_time, up_time, prepare
    </sql>

    <insert id="save" parameterType="com.zimuka.peers.dao.UserPeer" useGeneratedKeys="true" keyProperty="id">
        insert into user_peer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="null != openId">
                open_id,
            </if>
            <if test="null != cardId">
                card_id,
            </if>
            <if test="null != groupId">
                group_id,
            </if>
            <if test="null != shareFlag">
                share_flag,
            </if>
            <if test="null != saveFlag">
                save_flag,
            </if>
            <if test="null != delFlag">
                del_flag,
            </if>
            <if test="null != ctTime">
                ct_time,
            </if>
            <if test="null != upTime">
                up_time,
            </if>
            <if test="null != prepare">
                prepare,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="null != openId">
                #{openId},
            </if>
            <if test="null != cardId">
                #{cardId},
            </if>
            <if test="null != groupId">
                #{groupId},
            </if>
            <if test="null != shareFlag">
                #{shareFlag},
            </if>
            <if test="null != saveFlag">
                #{saveFlag},
            </if>
            <if test="null != delFlag">
                #{delFlag},
            </if>
            <if test="null != ctTime">
                #{ctTime},
            </if>
            <if test="null != upTime">
                #{upTime},
            </if>
            <if test="null != prepare">
                #{prepare},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.zimuka.peers.dao.UserPeer">
        update user_peer
        <set>
            <if test="null != groupId">
                group_id=#{groupId},
            </if>
            <if test="null != shareFlag">
                share_flag=#{shareFlag},
            </if>
            <if test="null != saveFlag">
                save_flag=#{saveFlag},
            </if>
            <if test="null != delFlag">
                del_flag=#{delFlag},
            </if>
            <if test="null != ctTime">
                ct_time=#{ctTime},
            </if>
            <if test="null != upTime">
                up_time=#{upTime},
            </if>
            <if test="null != prepare">
                prepare=#{prepare},
            </if>
        </set>
        where open_id=#{openId} and card_id=#{cardId}
    </update>

    <select id="findOneById" resultMap="UserPeerMapperResultMap">
        select <include refid="Base_Column_List"/>
        from user_peer
        where open_id=#{openId} and card_id=#{cardId}
    </select>

    <select id="findUserPeerByParam" parameterType="com.zimuka.peers.dao.UserPeer" resultMap="UserPeerMapperResultMap">
        select <include refid="Base_Column_List"/>
        from user_peer
        <where>
            <if test="null != openId">
                and open_id=#{openId}
            </if>
            <if test="null != cardId">
                and card_id=#{cardId}
            </if>
            <if test="null != groupId">
                and group_id=#{groupId}
            </if>
            <if test="null != shareFlag">
                and share_flag=#{shareFlag}
            </if>
            <if test="null != saveFlag">
                and save_flag=#{saveFlag}
            </if>
            <if test="null != delFlag">
                and del_flag=#{delFlag}
            </if>
            <if test="null != ctTime">
                and ct_time=#{ctTime}
            </if>
            <if test="null != upTime">
                and up_time=#{upTime}
            </if>
            <if test="null != prepare">
                and prepare=#{prepare}
            </if>
        </where>
    </select>

    <select id="findAllByOpenId" resultType="com.zimuka.peers.dao.UserCard">
       select uc.id as id, uc.username as username, uc.user_wechat as userWechat, uc.user_company as userCompany, uc.user_industry as userIndustry, uc.user_city as userCity,
       uc.user_job as userJob, uc.user_img as userImg, uc.user_phone as userPhone, uc.user_email as userEmail, uc.synopsis as synopsis, uc.demand as demand,
       uc.resources as resources, uc.give_like_num as giveLikeNum
       from user_card uc, user_peer up
       where up.open_id = #{openId} and uc.id=up.card_id and up.save_flag=2
    </select>
</mapper>